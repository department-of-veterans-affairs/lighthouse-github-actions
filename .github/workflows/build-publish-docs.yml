name: Build & Publish Documentation
run-name: Build/Publish Docs - ${{ inputs.repository }}
on:
  push:
    branches:
      - main
    paths: ["**/*.md", "**/mkdocs.yml"]
  workflow_dispatch:
    inputs:
      enable-production:
        required: false
        default: true
        type: boolean
      gh-pages:
        required: false
        default: false
        type: boolean
      strict-mode:
        required: false
        default: false
        type: boolean
      repository:
        required: false
        default: 'department-of-veterans-affairs/lighthouse-github-actions'
        type: string
      token:
        required: false
        type: string
      namespace:
        required: false
        type: string
      branch:
        required: false
        type: string
      descriptor-file:
        required: false
        type: string
      distinct_id:
        required: false
        type: string
env:
  REPO: ${{ inputs.repository != '' && inputs.repository || github.repository }}
  TOKEN: ${{ inputs.token != '' && inputs.token || secrets.TECHDOCS_PAT }}
  NAMESPACE: ${{ inputs.namespace != '' &&  inputs.namespace || secrets.KUBE_NAMESPACE }}
jobs:
  validate-techdocs:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.get-branch.outputs.branch }}
    steps:
      - name: Echo distinct ID ${{ inputs.distinct_id }} # Used to return success or fail to the source repo
        run: echo "${{ inputs.distinct_id }}"
      - name: Setup branch
        id: get-branch
        run: |
          branch="${{ inputs.branch }}"
          if [ "$branch" == "" ]; then
            branch=$(curl \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ env.TOKEN }}" \
            https://api.github.com/repos/${{ env.REPO }} | jq -r '.default_branch')
          fi
          echo "branch=$branch" >> $GITHUB_OUTPUT
      - name: Check out target repository
        uses: actions/checkout@v3
        with:
          repository: ${{ env.REPO }}
          ref: ${{ steps.get-branch.outputs.branch }}
          token: ${{ env.TOKEN }}
          path: ${{ env.REPO }}
      - name: Check out Github Actions repository
        if: ${{ env.REPO != 'department-of-veterans-affairs/lighthouse-github-actions' }}
        uses: actions/checkout@v3
        with:
          repository: department-of-veterans-affairs/lighthouse-github-actions
          path: department-of-veterans-affairs/lighthouse-github-actions
          token: ${{ secrets.TECHDOCS_PAT }}
          ref: main
      - name: Validate techdocs
        id: validation
        uses: ./department-of-veterans-affairs/lighthouse-github-actions/.github/actions/validate-techdocs
        with:
          repository: ${{ env.REPO }}
          descriptor-file: ${{ inputs.descriptor-file }}
          namespace: ${{ env.NAMESPACE }}
          token: ${{ env.TOKEN }}
          strict-mode: ${{ inputs.strict-mode }}
      - name: Validation results
        run: |
          echo "${{ steps.validation.outputs.results }}"
  build-techdocs:
    needs: [validate-techdocs]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [Development]
    environment:
      name: ${{ matrix.environment }}
    steps:
      - name: Create techdocs
        if: ${{ matrix.environment == 'Development' || ( inputs.enable-production != 'false' && matrix.environment == 'Production' ) }}
        uses: department-of-veterans-affairs/lighthouse-github-actions/.github/actions/techdocs@main
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
          kube_namespace: ${{ secrets.KUBE_NAMESPACE }}
          serviceAccountName: bandicoot-sa
          repository: ${{ env.REPO }}
          branch: ${{ needs.validate-techdocs.outputs.branch }}
          descriptor-file: ${{ inputs.descriptor-file }}
          namespace: ${{ env.NAMESPACE }}
          token: ${{ secrets.TECHDOCS_PAT }}
          AWSBucketName: ${{ secrets.AWS_BUCKET_NAME }}
          PAT: ${{ env.TOKEN }}
  deploy-gh-pages:
    if: ${{ inputs.gh-pages == 'true' }}
    needs: [build-techdocs]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ env.REPO }}
          token: ${{ env.TOKEN }}
      - name: Install GraphViz
        run: sudo apt-get install -y graphviz
      - name: Setup Mkdocs dependencies
        run: /bin/sh <(curl -s https://${{ secrets.WEBHOOK_PAT }}@raw.githubusercontent.com/department-of-veterans-affairs/lighthouse-github-actions/main/scripts/setup_mkdocs.sh)
      - name: Deploy Github Pages
        run: mkdocs gh-deploy --force -r https://${{ env.TOKEN }}@github.com/${{ env.REPO }}.git
        shell: bash
