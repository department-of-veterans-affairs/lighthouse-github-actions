name: Build & publish documentation
on:
  repository_dispatch:
    types: [techdocs]
  push:
    branches: [main]
    paths: ["**/*.md", "**/mkdocs.yaml"]
  workflow_dispatch:
env:
  REPO: ${{ github.event.client_payload.github.repository != '' && github.event.client_payload.github.repository || github.repository }}
  TOKEN: ${{ github.event.client_payload.inputs.token != '' && github.event.client_payload.inputs.token || secrets.TECHDOCS_PAT }}
  NAMESPACE: ${{ github.event.client_payload.inputs.namespace != '' &&  github.event.client_payload.inputs.namespace || secrets.KUBE_NAMESPACE }}
jobs:
  validate-techdocs:
    runs-on: ubuntu-latest
    steps:
      - name: ${{ github.event.client_payload.github.sha }} # Used to return success or fail to the source repo
        run: echo "${{ github.event.client_payload.github.sha }}"
      - name: Setup branch
        run: |
          if [ "${{ github.event.client_payload.branch }}" == "" ]; then
            branch=$(curl \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ inputs.token }}" \
            https://api.github.com/repos/${{ inputs.repository }} | jq -r '.default_branch')
          else
            branch="${{ github.event.client_payload.inputs.branch }}"
          fi
          echo "branch=${branch}" >> $GITHUB_ENV
      - uses: actions/checkout@v3
        with:
          repository: ${{ env.REPO }}
          ref: "$branch"
          token: ${{ env.TOKEN }}
      - name: Validate techdocs
        id: validation
        uses: department-of-veterans-affairs/lighthouse-github-actions/.github/actions/validate-techdocs@main
        with:
          repository: ${{ env.REPO }}
          descriptor-file: ${{ github.event.client_payload.inputs.descriptor-file }}
          namespace: ${{ env.NAMESPACE }}
          token: ${{ env.TOKEN }}
      - name: Validation results
        run: |
          echo "${{ steps.validation.outputs.results }}"
  build-techdocs:
    needs: [validate-techdocs]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [Development, Production]
    environment:
      name: ${{ matrix.environment }}
    steps:
      - name: ${{ github.event.client_payload.github.sha }}
        run: echo "${{ github.event.client_payload.github.sha }}"
      - name: Create techdocs
        if: ${{ matrix.environment == 'Development' || ( github.event.client_payload.inputs.enable-production != 'false' && matrix.environment == 'Production' ) }}
        uses: department-of-veterans-affairs/lighthouse-github-actions/.github/actions/techdocs@main
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
          kube_namespace: ${{ secrets.KUBE_NAMESPACE }}
          serviceAccountName: bandicoot-sa
          repository: ${{ env.REPO }}
          branch: ${{ github.event.client_payload.inputs.branch }}
          descriptor-file: ${{ github.event.client_payload.inputs.descriptor-file }}
          namespace: ${{ env.NAMESPACE }}
          token: ${{ env.TOKEN }}
          AWSBucketName: ${{ secrets.AWS_BUCKET_NAME }}
          PAT: ${{ secrets.TECHDOCS_PAT }}
  deploy-gh-pages:
    if: ${{ github.event.client_payload.github.gh-pages == 'true' || github.event_name != 'repository_dispatch' }}
    needs: [validate-techdocs]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ env.REPO }}
          token: ${{ env.TOKEN }}
      - name: Install GraphViz
        run: sudo apt-get install -y graphviz
      - name: Setup Mkdocs dependencies
        run: /bin/sh <(curl -s https://${{ secrets.WEBHOOK_PAT }}@raw.githubusercontent.com/department-of-veterans-affairs/lighthouse-github-actions/main/scripts/setup_mkdocs.sh)
      - name: Deploy Github Pages
        run: mkdocs gh-deploy --force -r https://${{ env.TOKEN }}@github.com/${{ env.REPO }}.git
        shell: bash
