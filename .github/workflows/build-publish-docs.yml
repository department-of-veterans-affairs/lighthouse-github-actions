name: Build & publish documentation
on:
  repository_dispatch:
    types: [techdocs]
  push:
    branches:
      - main
    paths: ["**/*.md", "**/mkdocs.yml"]
  workflow_dispatch:
    inputs:
      distinct_id:
        required: false
        type: number
      repository:
        required: false
        default: ${{ github.repository }}
        type: string
      token:
        required: false
        default: ${{ secrets.TECHDOCS_PAT }}
        type: string
      namespace:
        required: false
        default: ${{ secrets.KUBE_NAMESPACE }}
        type: string
      branch:
        required: false
        type: string
      gh-pages:
        required: false
        default: false
        type: boolean
      descriptor-file:
        required: false
        type: string
      strict-mode:
        required: false
        default: false
        type: boolean
      enable-production:
        required: false
        default: true
        type: boolean

jobs:
  validate-techdocs:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.get-branch.outputs.branch }}
    steps:
      - name: Echo distinct ID ${{ inputs.distinct_id }} # Used to return success or fail to the source repo
        run: echo "${{ inputs.distinct_id }}"
      - name: Setup branch
        id: get-branch
        run: |
          branch="${{ inputs.branch }}"
          if [ "$branch" == "" ]; then
            branch=$(curl \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ inputs.token }}" \
            https://api.github.com/repos/${{ inputs.repository }} | jq -r '.default_branch')
          fi
          echo "branch=$branch" >> $GITHUB_OUTPUT
      - name: Check out target repository
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ steps.get-branch.outputs.branch }}
          token: ${{ inputs.token }}
          path: ${{ inputs.repository }}
      - name: Check out Github Actions repository
        if: ${{ inputs.repository != 'department-of-veterans-affairs/lighthouse-github-actions' }}
        uses: actions/checkout@v3
        with:
          repository: department-of-veterans-affairs/lighthouse-github-actions
          path: department-of-veterans-affairs/lighthouse-github-actions
          token: ${{ secrets.TECHDOCS_PAT }}
          ref: main
      - name: Validate techdocs
        id: validation
        uses: ./department-of-veterans-affairs/lighthouse-github-actions/.github/actions/validate-techdocs
        with:
          repository: ${{ inputs.repository }}
          descriptor-file: ${{ inputs.descriptor-file }}
          namespace: ${{ inputs.namespace }}
          token: ${{ inputs.token }}
          strict-mode: ${{ inputs.strict-mode }}
      - name: Validation results
        run: |
          echo "${{ steps.validation.outputs.results }}"
  build-techdocs:
    needs: [validate-techdocs]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [Development]
    environment:
      name: ${{ matrix.environment }}
    steps:
      - name: Create techdocs
        if: ${{ matrix.environment == 'Development' || ( github.event.client_payload.inputs.enable-production != 'false' && matrix.environment == 'Production' ) }}
        uses: department-of-veterans-affairs/lighthouse-github-actions/.github/actions/techdocs@main
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
          kube_namespace: ${{ secrets.KUBE_NAMESPACE }}
          serviceAccountName: bandicoot-sa
          repository: ${{ inputs.repository }}
          branch: ${{ needs.validate-techdocs.outputs.branch }}
          descriptor-file: ${{ github.event.client_payload.inputs.descriptor-file }}
          namespace: ${{ inputs.namespace }}
          token: ${{ secrets.TECHDOCS_PAT }}
          AWSBucketName: ${{ secrets.AWS_BUCKET_NAME }}
          PAT: ${{ inputs.token }}
  deploy-gh-pages:
    if: ${{ inputs.gh-pages == 'true' || github.event_name != 'repository_dispatch' }}
    needs: [build-techdocs]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repository }}
          token: ${{ inputs.token }}
      - name: Install GraphViz
        run: sudo apt-get install -y graphviz
      - name: Setup Mkdocs dependencies
        run: /bin/sh <(curl -s https://${{ secrets.WEBHOOK_PAT }}@raw.githubusercontent.com/department-of-veterans-affairs/lighthouse-github-actions/main/scripts/setup_mkdocs.sh)
      - name: Deploy Github Pages
        run: mkdocs gh-deploy --force -r https://${{ inputs.token }}@github.com/${{ inputs.repository }}.git
        shell: bash
