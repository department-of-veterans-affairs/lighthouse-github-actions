name: "Send Techdocs Webhook"
description: "Sends a webhook to trigger repository dispatch event for techdocs workflow"
inputs:
  repository:
    description: "Name of repository"
    required: true
  branch:
    description: "Branch of repository"
    required: false
  descriptor-file:
    description: "Name of catalog entity descriptor file"
    required: false
  token:
    description: "Personal Access token for webhook"
    required: false
  gh-pages:
    description: "Flag used to enable gh-pages deployment"
    default: ""
    required: false
  enable-production:
    description: "Flag used to enable or disable techdocs for production"
    default: "true"
    required: false
runs:
  using: "composite"
  steps:
    - name: Get repository name and update input buffer
      run: |
        echo '${{ toJson(inputs) }}' > temp.json
        REPO_NAME=$( basename ${{ inputs.repository }})
        cat <<< $(jq --arg v $REPO_NAME '."repo-name"=$v' temp.json) > temp.json
        echo "INPUTS<<EOF" >> "$GITHUB_ENV"
        cat temp.json >> "$GITHUB_ENV"
        echo "EOF" >> "$GITHUB_ENV"
      shell: bash
    - name: Dispatch build/publish documentation and get the run ID
      id: get_run_id
      uses: codex-/return-dispatch@v1
      with:
        owner: "department-of-veterans-affairs"
        repo: "lighthouse-github-actions"
        ref: ${{ inputs.branch }}
        token: ${{ inputs.token }}
        workflow: "build-publish-docs.yml"
        workflow_inputs: "${{ env.INPUTS }}"
    - name: Await run ID ${{ steps.get_run_id.outputs.run_id }}
      uses: codex-/await-remote-run@v1.0.0
      with:
        token: ${{ inputs.token }}
        repo: "lighthouse-github-actions"
        owner: "department-of-veterans-affairs"
        run_id: ${{ steps.get_run_id.outputs.run_id }}
        run_timeout_seconds: 600
        poll_interval_ms: 5000