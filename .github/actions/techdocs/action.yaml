name: 'Publish Techdocs'
description: 'Generates and publishes techdocs using kubernetes job'
inputs:
  kubeconfig: 
    description: 'Kubernetes context -- config file usually located at ~/.kube/config'
    required: true
  namespace:
    description: 'Namespace to use for Kubernetes job'
    default: 'default'
    required: false
  serviceAccountName:
    description: 'Service account name'
    required: true
  repository:
    description: 'Name of repository'
    default: ${{ github.repository }}
    required: true
  team-name:
    description: 'Namespace of entity; used as namespace for --entity <namespace/kind/name>'
    required: false
  kind:
    description: 'Kind of entity; used as kind for --entity <namespace/kind/name>'
    required: false
  name:
    description: 'Name of Entity; used as name for --entity <namespace/kind/name>'
    required: false
  username:
    description: 'Name of Entity; used as name for --entity <namespace/kind/name>'
    default: ${{ github.repository_owner }}
    required: false
  token:
    description: 'Name of Entity; used as name for --entity <namespace/kind/name>'
    default: ${{ github.token }}
    required: false
  catalog-info:
    description: 'Name of catalog entity descriptor file'
    default: 'catalog-info'
    required: false


runs:
  using: "composite"
  steps:
  - uses: actions/checkout@v2.4.0
    with:
      ref: 'main'
      repository: ${{ inputs.repository }}
  - name: Set K8s context
    uses: azure/k8s-set-context@v1
    with:
      method: kubeconfig
      kubeconfig: ${{ inputs.kubeconfig }}
  - name: Set namespace
    run: kubectl config set-context --current --namespace=${{ inputs.namespace }}
    shell: bash
  - name: Get entity path
    id: entity
    run: |
      file="./${{ inputs.catalog-info }}.yaml"
      namespace=$(cat "${file}" | yq .namespace)
      kind=$(cat "${file}" | yq .kind)
      name="$(cat "${file}" | yq .metadata.name)"
      if [[ -z "${{ inputs.team-name }}" ]]; then
        echo 'Using Entity Namespace from ${{ inputs.catalog-info }}.yaml'
        echo "::set-output name=namespace::$namespace"
      else
        echo 'Using Entity Namespace from input'
        echo "::set-output name=namespace::${{ inputs.team-name }}"
      fi
      if [[ -z "${{ inputs.kind }}" ]]; then
        echo 'Using Entity Kind from ${{ inputs.catalog-info }}.yaml'
        echo "::set-output name=kind::$kind"
      else
        echo 'Using Entity Kind from input'
        echo "::set-output name=kind::${{ inputs.kind }}"
      fi
      if [[ -z "${{ inputs.name }}" ]]; then
        echo 'Using Entity Name from ${{ inputs.catalog-info }}.yaml'
        echo "::set-output name=name::$name"
      else
        echo 'Using Entity Name from input'
        echo "::set-output name=kind::${{ inputs.name }}"
      fi
      echo "Entity's Techdocs location: ${{ steps.entity.outputs.namespace }}/${{ steps.entity.outputs.kind }}/${{ steps.entity.outputs.name }}"
    shell: bash
  - name: Create techdocs Job
    run: >
      ${{ github.action_path }}/scripts/create-techdocs-job.sh 
      ${{ inputs.serviceAccountName }}
      ${{ inputs.repository }}
      ${{ steps.entity.outputs.namespace }}
      ${{ steps.entity.outputs.kind }}
      ${{ steps.entity.outputs.name }}
      ${{ inputs.username }}
      ${{ inputs.token }}
    env: 
      GITHUB_TOKEN: ${{ github.token }}
      GITHUB_USER: ${{ github.repository_owner }}
    shell: bash
  - name: Techdocs Job status
    run: >
      ${{ github.action_path }}/scripts/techdocs-job-status.sh
    shell: bash
  