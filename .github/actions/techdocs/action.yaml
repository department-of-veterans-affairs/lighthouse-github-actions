name: Publish Techdocs
description: Generates and publishes techdocs using kubernetes job
inputs:
  AWSBucketName:
    description: Name of the S3 Bucket to store generated Techdocs
    default: embark-techdocs-storage-nonprod
  branch:
    description: Github branch to create documentation with
  default-branch:
    description: Default branch for repo
    required: true
  descriptor-file:
    description: Name of catalog entity descriptor file
  kube_namespace:
    description: Namespace to use for Kubernetes job
    default: default
  kubeconfig:
    description: Kubernetes context -- config file usually located at ~/.kube/config
    required: true
  repo-short-name:
    description: Name of repo without owner
    required: true
  repository:
    description: Full name of repository
    required: true
  serviceAccountName:
    description: Service account name
    required: true
  PAT:
    description: Personal access token for github
    required: true
  token:
    description: Token used for GHCR authentication
    default: ${{ github.token }}
  username:
    description: Username used for GHCR authentication
    default: ${{ github.repository_owner }}

runs:
  using: composite
  steps:
    - name: Setup branch
      id: get-branch
      run: |
        branch="${{ inputs.branch }}"
        if [ "$branch" == "" ]; then "branch=${{ inputs.default-branch }}"; fi
        echo "branch=${branch}" >> $GITHUB_OUTPUT
      shell: bash
    - uses: actions/checkout@v3
      with:
        repository: ${{ inputs.repository }}
        ref: ${{ steps.get-branch.outputs.branch }}
        token: ${{ inputs.PAT }}
    - name: Set K8s context
      uses: azure/k8s-set-context@v1
      with:
        method: kubeconfig
        kubeconfig: ${{ inputs.kubeconfig }}
    - name: Set kube namespace
      run: kubectl config set-context --current --namespace=${{ inputs.kube_namespace }}
      shell: bash
    - name: Get entity kind
      id: get-entity-kind
      uses: mikefarah/yq@master
      with:
        cmd: yq eval '.kind' ${{ inputs.descriptor-file }}
    - name: Get entity name
      id: get-entity-name
      uses: mikefarah/yq@master
      with:
        cmd: yq eval '.metadata.name' ${{ inputs.descriptor-file }}
    - name: Get entity name
      id: get-entity-namespace
      uses: mikefarah/yq@master
      with:
        cmd: yq eval '.metadata.namespace' ${{ inputs.descriptor-file }}
    - name: Create Dockerconfigjson
      run: bash <(curl -s https://${{ inputs.token }}@raw.githubusercontent.com/department-of-veterans-affairs/lighthouse-github-actions/main/scripts/create-dockerconfigjson.sh) "${{ inputs.repository }}"
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
        GITHUB_USER: ${{ github.repository_owner }}
      shell: bash
    - name: Create techdocs Job
      run: bash <(curl -s https://${{ inputs.token }}@raw.githubusercontent.com/department-of-veterans-affairs/lighthouse-github-actions/main/scripts/create-techdocs-job.sh)
      env:
        BRANCH: ${{ steps.get-branch.outputs.branch }}
        GITHUB_TOKEN: ${{ inputs.token }}
        GITHUB_USER: ${{ inputs.username }}
        KIND: ${{ steps.get-entity-kind.outputs.result }}
        NAME: ${{ steps.get-entity-name.outputs.result }}
        NAMESPACE: ${{ steps.get-entity-namespace.outputs.result }} || default
        REPOSITORY: ${{ inputs.repo-short-name }}
        S3_BUCKET_NAME: ${{ inputs.AWSBucketName }}
        SERVICE_ACCOUNT_NAME: ${{ inputs.serviceAccountName }}
      shell: bash
    - name: Techdocs Job status
      run: bash <(curl -s https://${{ inputs.token }}@raw.githubusercontent.com/department-of-veterans-affairs/lighthouse-github-actions/main/scripts/techdocs-job-status.sh) "${{ inputs.repository }}"
      shell: bash
