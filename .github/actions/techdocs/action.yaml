name: "Publish Techdocs"
description: "Generates and publishes techdocs using kubernetes job"
inputs:
  kubeconfig:
    description: "Kubernetes context -- config file usually located at ~/.kube/config"
    required: true
  kube_namespace:
    description: "Namespace to use for Kubernetes job"
    default: "default"
    required: false
  serviceAccountName:
    description: "Service account name"
    required: true
  repository:
    description: "Name of repository"
    required: true
  branch:
    description: "Github branch to create documentation with"
    required: false
  namespace:
    description: "Namespace of entity; used as namespace for --entity <namespace/kind/name>"
    default: "default"
    required: false
  kind:
    description: "Kind of entity; used as kind for --entity <namespace/kind/name>"
    required: false
  name:
    description: "Name of Entity; used as name for --entity <namespace/kind/name>"
    required: false
  username:
    description: "Username used for GHCR authentication"
    default: ${{ github.repository_owner }}
    required: false
  token:
    description: "Token used for GHCR authentication"
    default: ${{ github.token }}
    required: false
  descriptor-file:
    description: "Name of catalog entity descriptor file"
    required: false
  AWSBucketName:
    description: "Name of the S3 Bucket to store generated Techdocs"
    default: "embark-techdocs-storage-nonprod"
    required: true
  PAT:
    description: "Personal access token for github"
    required: true

runs:
  using: "composite"
  steps:
    - name: Setup branch
      id: get-branch
      run: |
        branch="${{ inputs.branch }}"
        if [ "${{ inputs.branch }}" == "" ]; then
          branch=$(curl \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: token ${{ inputs.PAT }}" \
          https://api.github.com/repos/${{ inputs.repository }} | jq -r '.default_branch')
        fi
        echo "branch=${branch}" >> $GITHUB_ENV
        echo "branch=${branch}" >> $GITHUB_OUTPUT
      shell: bash
    - uses: actions/checkout@v3
      with:
        repository: ${{ inputs.repository }}
        ref: ${{ steps.get-branch.outputs.branch }}
        token: ${{ inputs.PAT }}
    - name: Set K8s context
      uses: azure/k8s-set-context@v1
      with:
        method: kubeconfig
        kubeconfig: ${{ inputs.kubeconfig }}
    - name: Set kube namespace
      run: kubectl config set-context --current --namespace=${{ inputs.kube_namespace }}
      shell: bash
    - name: Get entity triplet
      id: entity
      run: bash <(curl -s https://${{ inputs.token }}@raw.githubusercontent.com/department-of-veterans-affairs/lighthouse-github-actions/main/scripts/entity-triplet.sh)
      env:
        BASE_PATH: ${{ github.workspace }}
        FILE: ${{ inputs.descriptor-file }}
        KIND: ${{ inputs.kind }}
        NAME: ${{ inputs.name }}
      shell: bash
    - name: S3 Location for Catalog Entity
      run: |
        if [[ "$namespace" == "null" ]]; then
          echo "Error: cannot create Techdocs with this Entity's namespace. Please add a valid namespace for the Entity."
        fi
        if [[ "$kind" == "null" ]]; then
          echo "Error: cannot create Techdocs with this Entity's Kind. Please add a valid Kind for the Entity."
        fi
        if [[ "$name" == "null" ]]; then
          echo "Error: cannot create Techdocs with this Entity's Name. Please add a valid Name for the Entity."
        fi
        echo "Entity's S3 Location: .../${namespace}/${kind}/${name}"
      shell: bash
    - name: Create Dockerconfigjson
      run: bash <(curl -s https://${{ inputs.token }}@raw.githubusercontent.com/department-of-veterans-affairs/lighthouse-github-actions/main/scripts/create-dockerconfigjson.sh) "${{ inputs.repository }}"
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
        GITHUB_USER: ${{ github.repository_owner }}
        branch: ${{ steps.get-branch.outputs.branch }}
      shell: bash
    - name: Checkout lighthouse-developer-portal
      uses: actions/checkout@v3
      with:
        repository: department-of-veterans-affairs/lighthouse-developer-portal
        path: department-of-veterans-affairs/lighthouse-developer-portal
        ref: main
        token: ${{ inputs.token }}
    - name: Get repo name # extracted from org/repo_name
      run: |
        echo "REPO_NAME=$(basename ${{ inputs.repository }})" >> $GITHUB_ENV
      shell: bash
    - name: Delete existing K8s jobs
      id: delete-jobs
      uses: ./department-of-veterans-affairs/lighthouse-developer-portal/.github/actions/delete-existing-k8s-job
      with:
        job-name: 'techdocs-${{ env.REPO_NAME }}'
    - name: Create techdocs Job
      if: ${{ steps.delete-jobs.outcome == 'success'}}
      run: >
        bash <(curl -s https://${{ inputs.token }}@raw.githubusercontent.com/department-of-veterans-affairs/lighthouse-github-actions/main/scripts/create-techdocs-job.sh)
        "${{ inputs.serviceAccountName }}"
        "${{ inputs.repository }}"
        "$namespace"
        "$kind"
        "$name"
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
        GITHUB_USER: ${{ inputs.username }}
        S3_BUCKET_NAME: ${{ inputs.AWSBucketName }}
      shell: bash
    - name: Await K8s job success
      uses: ./department-of-veterans-affairs/lighthouse-developer-portal/.github/actions/await-k8s-job-success
      with:
        job-name: 'techdocs-${{ env.REPO_NAME }}'
        container-name: techdocs